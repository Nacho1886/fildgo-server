# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Session {
  id: ID!
  CreatedAt: DateTime!
  reservedDate: DateTime!
  typeSession: ValidTypeSsesion!
  reservedQuantity: Float!
  isCompleted: Boolean!
  isCanceled: Boolean!
  lastActivity: DateTime
  lastActivityBy: User
  user: User!
  farm: Farm!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Different types of session format."""
enum ValidTypeSsesion {
  hours
  quantity
}

type Post {
  id: ID!
  title: String!
  description: String!
  stars: Float!
  isActive: Boolean!
  CreatedAt: DateTime!
  lastActivity: DateTime
  lastActivityBy: User
  user: User!
  session: Session!
  images: Image
}

type Image {
  id: ID!
  url: String!
  updatedAt: DateTime!
  user: User!
  item: Item
  farm: Farm
  post: Post
}

type Farm {
  id: ID!
  name: String!
  slug: String!
  tags: [ValidTagFarms!]!
  isActive: Boolean!
  CreatedAt: DateTime!
  user: User!
  lastActivity: DateTime
  lastActivityBy: User
  images: [Image!]
  sessions: [Session!]
}

"""Different types of tags for a farms."""
enum ValidTagFarms {
  aquaculture
  cooperative
  hay
  organic
  urban
  nomadic
  sedentary
  intensive
}

type Item {
  id: ID!
  name: String!
  slug: String!
  tag: ValidTagItems!
  quantityUnits: ValidUnities!
  isActive: Boolean!
  CreatedAt: DateTime!
  user: User!
  images: [Image!]
  lastActivity: DateTime
  lastActivityBy: User
}

"""Different types of tags for farm items."""
enum ValidTagItems {
  citrus
  legume
  apple
  pear
  stone_fruit
  banana
  mango
  berry
  tomato
  avocado
  leafy_green
  cruciferous
  marrow
  allium
  plant_stem
  meat
}

"""Different types of unities for farm items."""
enum ValidUnities {
  unit
  pound
  bag
  box
  Kg
  L
  lb
}

type User {
  id: ID!
  name: String!
  lastname: String!
  username: String!
  email: String!
  CreatedAt: DateTime!
  lastActivity: DateTime
  roles: [ValidRoles!]!
  isActive: Boolean!
  userChangedBy: User
  items: [Item!]!
  farms: [Farm!]!
  posts: [Post!]!
  sessions: [Session!]!
}

"""Different types of user roles inside the app."""
enum ValidRoles {
  guest
  user
  owner
  admin
}

type ItemToFarm {
  id: ID!
  date: DateTime!
  item: Item!
  farm: Farm!
}

type FollowUp {
  id: ID!
  date: DateTime!
  follower: User!
  followedUser: User
  followedItem: Item
  followedFarm: Farm
}

type FarmCategory {
  """Example field (placeholder)"""
  exampleField: Int!
}

type ItemCategory {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Query {
  users: [User!]!
  user(term: String!): User!
  items(offset: Int = 0, limit: Int = 10, search: String): [Item!]!
  item(term: String!): Item!
  Farms(offset: Int = 0, limit: Int = 10, search: String): [Farm!]!
  Farm(term: String!): Farm!
  Sessions(offset: Int = 0, limit: Int = 10, search: String): [Session!]!
  Session(id: ID!): Session!
  itemToFarm(id: Int!): ItemToFarm!
  followUps: [FollowUp!]!
  followUp(id: Int!): FollowUp!
  farmCategories: [FarmCategory!]!
  farmCategory(id: Int!): FarmCategory!
  itemCategories: [ItemCategory!]!
  itemCategory(id: Int!): ItemCategory!
}

type Mutation {
  createItem(createItemInput: CreateItemInput!): Item!
  createFarm(createFarmInput: CreateFarmInput!): Farm!
  createSession(createSessionInput: CreateSessionInput!): Session!

  """Ejecuta la construcci√≥n de la base de datos"""
  executeSeed: Boolean!
  createItemToFarm(createItemInput: CreateItemToFarmInput!): ItemToFarm!
  removeItemToFarm(id: Int!): ItemToFarm!
  createFollowUp(createFollowUpInput: CreateFollowUpInput!): FollowUp!
  removeFollowUp(id: Int!): FollowUp!
  createFarmCategory(createFarmCategoryInput: CreateFarmCategoryInput!): FarmCategory!
  updateFarmCategory(updateFarmCategoryInput: UpdateFarmCategoryInput!): FarmCategory!
  removeFarmCategory(id: Int!): FarmCategory!
  createItemCategory(createItemCategoryInput: CreateItemCategoryInput!): ItemCategory!
  updateItemCategory(updateItemCategoryInput: UpdateItemCategoryInput!): ItemCategory!
  removeItemCategory(id: Int!): ItemCategory!
}

input CreateItemInput {
  name: String!
  tag: ValidTagItems!
  quantityUnits: ValidUnities!
}

input CreateFarmInput {
  name: String!
  tags: [ValidTagFarms!]!
}

input CreateSessionInput {
  reservedDate: DateTime!
  typeSession: ValidTypeSsesion!
  reservedQuantity: Float!
  farmId: ID!
  itemId: ID!
}

input CreateItemToFarmInput {
  itemId: ID!
  farmId: ID!
}

input CreateFollowUpInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateFarmCategoryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateFarmCategoryInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateItemCategoryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateItemCategoryInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}